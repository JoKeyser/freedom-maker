#!/bin/bash
# 
# Copyright 2011 by Bdale Garbee <bdale@gag.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# based on work by <ivan@sanchezortega.es>, who released his script under
# the following license terms:
#  ----------------------------------------------------------------------------
#  "THE BEER-WARE LICENSE" (Revision 42):
#  As long as you retain this notice you can do whatever you want with 
#  this stuff. If we meet some day, and you think this stuff is worth it, 
#  you can buy me a beer in return.
#  ----------------------------------------------------------------------------

# mk_dreamplug_rootfs
#
# Runs multistrap and readies the resulting root filesystem to silently 
# complete package configuration on the first boot-up.

# We don't tolerate errors.
set -e

# users
hostname='freedombox'
rootpassword='freedom'
user='fbx'
userpassword='frdm'
export rootpassword

# where to build images, etc
basedir=`pwd`/build
source=`pwd`/source
target=$basedir/dreamplug
tmpdir=$basedir/tmp
pkgcache=$tmpdir/aptcache
homedir=$target/home/$user

function copy_file {
    cp "${source}/${1}" "${target}/${1}"
}

mkdir -p $target
mkdir -p $tmpdir
mkdir -p $pkgcache
mkdir -p $homedir; chown 1000:1000 $homedir

kernel_version="$(ls kernel/linux-image-*.deb | sort -rn | head -n1 | cut -d_ -f1 | sed s#kernel/linux-image-##)"

rm -rf $target/*

mkdir -p $target/var/cache/apt/ && mount -o bind $pkgcache $target/var/cache/apt/

echo "Multistrapping..."
multistrap -f fbx-armel.conf -d $target

mkdir $target/var/cache/apt/archives

# don't leave target image containing apt config of the build host
# FIXME -- we could do this better, using ftp.debian.org is a temporary hack
echo "clean up target apt configuration"
rm -f $target/etc/apt/sources.list.d/multistrap-debian.list
copy_file /etc/sources.list

# kludge around Dreamplug kernel support not being available in Debian main yet
echo "copy kernel packages to target filesystem"
mkdir -p $target/tmp/kernel
cp kernel/*.deb $target/tmp/kernel/
cp kernel/uImage $target/tmp/kernel/

echo "copy copy2dream script to target filesystem"
copy_file /sbin/copy2dream
chown root:root $target/sbin/copy2dream
chmod 744 $target/sbin/copy2dream

# Until udev is configured and run for the first time, dev nodes won't be created, but we need some basic ones for spawning a console (console) and creating RSA keys for SSH (urandom).
echo "Creating basic device nodes"
mknod $target/dev/console c 5 1
mknod $target/dev/random c 1 8
mknod $target/dev/urandom c 1 9
mknod $target/dev/null c 1 3
mknod $target/dev/ptmx c 5 2

# Basic fstab & mtab..
echo "Setting up basic fstab & mtab"
copy_file /etc/fstab

touch $target/etc/mtab

# Set up hostname
echo "Setting up hostname, /etc/network/interfaces, nameservers, persistent-net-generator rules"
echo $hostname > $target/etc/hostname

# Create /etc/network/interfaces
copy_file /etc/network/interfaces

# Setup nameserver (use OpenDNS by default)
copy_file /etc/resolv.conf

# Touch the net generator udev so that eth0 won't be reassigned in case the user
# changes the MAC address - this may happen if you change the rootfs between plugs.
touch $target/etc/udev/rules.d/75-persistent-net-generator.rules

# generate configuration script

echo "Create script to configure packages in qemu-user-static"

copy_file $target/install.sh

chmod 755 $target/install.sh

echo "Adding a few FreedomBox projects to the image."
git clone git://github.com/NickDaly/Plinth.git $homedir/plinth
git clone git://github.com/jvasile/freedombox-privoxy $homedir/freedombox-privoxy
git clone git://github.com/jvasile/withsqlite.git $homedir/withsqlite
hg clone https://hg@bitbucket.org/nickdaly/plugserver $homedir/plugserver
chown -R 1000:1000 $homedir

echo "Using qemu-user-static to perform first-boot configuration now."

mkdir -p $target/usr/bin
cp /usr/bin/qemu-arm-static $target/usr/bin
chroot $target /install.sh
rm $target/usr/bin/qemu-arm-static

echo "Syncing..."
sync

echo "Finished. You may now copy the rootfs to the plug."
